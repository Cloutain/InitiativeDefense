#define IOCTL_NTPROCDRV_GET_REGINFO CTL_CODE(FILE_DEVICE_UNKNOWN,0x0910, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS)
#define IOCTL_NTPROCDRV_SET_APPEVENT_OK CTL_CODE(FILE_DEVICE_UNKNOWN,0x0911, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS)
#define IOCTL_NTPROCDRV_SET_APPEVENT_NO CTL_CODE(FILE_DEVICE_UNKNOWN,0x0912, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS)
#define IOCTL_NTPROCDRV_TURNON_REGMON CTL_CODE(FILE_DEVICE_UNKNOWN,0x0913, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS)
#define IOCTL_NTPROCDRV_TURNOFF_REGMON CTL_CODE(FILE_DEVICE_UNKNOWN,0x0914, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS)





typedef struct _RegCallbackInfo
{
	CHAR    ProcName[256];	//进程名
	CHAR    ProcFullPath[256];          //进程路径
	CHAR    Info1[256];					//信息1
	CHAR    Info2[256];					//信息2
 } REG_CALLBACK_INFO, *REG_PCALLBACK_INFO;